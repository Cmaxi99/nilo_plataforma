version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: niloeducation-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Se crearán dos databases automáticamente
      POSTGRES_MULTIPLE_DATABASES: niloeducation,keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - nilo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: niloeducation-keycloak
    environment:
      # Database configuration - KEYCLOAK USA SU PROPIA DB
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

      # Keycloak admin credentials
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}

      # Keycloak configuration
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8081:8080"
      - "8443:8443"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nilo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    command: start-dev
    restart: unless-stopped
    volumes:
      - keycloak_data:/opt/keycloak/data

  niloeducation-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: niloeducation-api
    environment:
      # Database configuration - TU APP USA OTRA DB
      DATASOURCES_DEFAULT_URL: jdbc:postgresql://postgres:5432/niloeducation
      DATASOURCES_DEFAULT_USERNAME: postgres
      DATASOURCES_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

      # Keycloak/OAuth2 configuration
      MICRONAUT_SECURITY_OAUTH2_CLIENTS_KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-niloeducation-api}
      MICRONAUT_SECURITY_OAUTH2_CLIENTS_KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      MICRONAUT_SECURITY_OAUTH2_CLIENTS_KEYCLOAK_OPENID_ISSUER: http://keycloak:8080/realms/${KEYCLOAK_REALM:-nilo}

      # JWT configuration
      MICRONAUT_SECURITY_TOKEN_JWT_SIGNATURES_JWKS_KEYCLOAK_URL: http://keycloak:8080/realms/${KEYCLOAK_REALM:-nilo}/protocol/openid-connect/certs

      # Micronaut environment
      MICRONAUT_ENVIRONMENTS: dev
      MICRONAUT_SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - nilo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  nilo-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local